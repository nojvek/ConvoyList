{"version":3,"file":"free-style.js","sourceRoot":"","sources":["../src/free-style.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Increment through IDs for FreeStyle, which can't generate hashed IDs.\n */\nlet instanceId = 0\n\n/**\n * Valid CSS property names.\n */\nexport type PropertyName = string\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = null | undefined | number | string | (string | number)[]\n\n/**\n * User styles object.\n */\nexport type UserStyles = any\n\n/**\n * Storing properties alphabetically ordered during parse.\n */\ntype Properties = Array<[PropertyName, PropertyValue]>\ntype NestedStyles = Array<[PropertyName, UserStyles]>\n\n/**\n * CSS properties that are valid unit-less numbers.\n */\nconst CSS_NUMBER: { [propertyName: string]: boolean } = {\n  'box-flex': true,\n  'box-flex-group': true,\n  'column-count': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'font-weight': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  // SVG properties.\n  'fill-opacity': true,\n  'stroke-dashoffset': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}\n\n// Add vendor prefixes to all unit-less properties.\nfor (const prefix of ['-webkit-', '-ms-', '-moz-', '-o-']) {\n  for (const property of Object.keys(CSS_NUMBER)) {\n    CSS_NUMBER[prefix + property] = true\n  }\n}\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate (propertyName: PropertyName): PropertyName {\n  return propertyName\n    .replace(/([A-Z])/g, '-$1')\n    .replace(/^ms-/, '-ms-') // Internet Explorer vendor prefix.\n    .toLowerCase()\n}\n\n/**\n * Check if a property name should pop to the top level of CSS.\n */\nfunction isAtRule (propertyName: PropertyName): boolean {\n  return propertyName.charAt(0) === '@'\n}\n\n/**\n * Check if a value is a nested style definition.\n */\nfunction isNestedStyle (value: any): boolean {\n  return value != null && typeof value === 'object' && !Array.isArray(value)\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string\n\n/**\n * Generate a hash value from a string.\n */\nexport function stringHash (str: string): string {\n  let value = 5381\n  let i = str.length\n\n  while (i) {\n    value = (value * 33) ^ str.charCodeAt(--i)\n  }\n\n  return (value >>> 0).toString(36)\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString (name: PropertyName, value: string | number) {\n  if (typeof value === 'number' && value !== 0 && !CSS_NUMBER[name]) {\n    value += 'px'\n  }\n\n  return `${name}:${String(value).replace(/([\\{\\}\\[\\]])/g, '\\\\$1')}`\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples <T extends any[]> (value: T[]): T[] {\n  return value.sort((a, b) => a[0] > b[0] ? 1 : -1)\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseUserStyles (styles: UserStyles, hasNestedStyles: boolean) {\n  const properties: Properties = []\n  const nestedStyles: NestedStyles = []\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const value = styles[key]\n\n    if (isNestedStyle(value)) {\n      nestedStyles.push([key.trim(), value])\n    } else {\n      properties.push([hyphenate(key.trim()), value])\n    }\n  }\n\n  return {\n    properties: sortTuples(properties),\n    nestedStyles: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles)\n  }\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties (properties: Properties) {\n  let result: string[] = []\n\n  for (const [name, value] of properties) {\n    if (value != null) {\n      if (Array.isArray(value)) {\n        result.push(value.filter(x => x != null).map(x => styleToString(name, x)).join(';'))\n      } else {\n        result.push(styleToString(name, value))\n      }\n    }\n  }\n\n  return result.join(';')\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate (selector: string, parent: string) {\n  if (selector.indexOf('&') > -1) {\n    return selector.replace(/&/g, parent)\n  }\n\n  return `${parent} ${selector}`\n}\n\n/**\n * Register all styles, but collect for post-selector correction using the hash.\n */\nfunction collectHashedStyles (container: Cache<any>, userStyles: UserStyles, isStyle: boolean, displayName?: string) {\n  const styles: [Cache<any>, string, Style][] = []\n\n  function stylize (cache: Cache<any>, userStyles: UserStyles, selector: string) {\n    const { properties, nestedStyles } = parseUserStyles(userStyles, isStyle)\n    const styleString = stringifyProperties(properties)\n    let pid = styleString\n\n    // Only create style instances when styles exists.\n    if (styleString) {\n      const style = new Style(styleString, cache.hash)\n      cache.add(style)\n      styles.push([cache, selector, style])\n    }\n\n    for (const [name, value] of nestedStyles) {\n      pid += name\n\n      if (isAtRule(name)) {\n        const rule = cache.add(new Rule(name, undefined, cache.hash))\n        pid += stylize(rule, value, selector)\n      } else {\n        pid += stylize(cache, value, isStyle ? interpolate(name, selector) : name)\n      }\n    }\n\n    return pid\n  }\n\n  // Create a temporary cache to handle changes/mutations before re-assigning later.\n  const cache = new Cache<Style | Rule>(container.hash)\n  const pid = stylize(cache, userStyles, '&')\n\n  const hash = `f${cache.hash(pid)}`\n  const id = displayName ? `${displayName}_${hash}` : hash\n\n  for (const [cache, selector, style] of styles) {\n    const key = isStyle ? interpolate(selector, `.${id}`) : selector\n    cache.get(style).add(new Selector(key, style.hash, undefined, pid))\n  }\n\n  container.merge(cache)\n\n  return { pid, id }\n}\n\n/**\n * Recursively register styles on a container instance.\n */\nfunction registerUserStyles (container: FreeStyle | Rule, styles: UserStyles, displayName?: string): string {\n  return collectHashedStyles(container, styles, true, displayName).id\n}\n\n/**\n * Create user rule. Simplified collection of styles, since it doesn't need a unique id hash.\n */\nfunction registerUserRule (container: FreeStyle | Rule, selector: string, styles: UserStyles): void {\n  const { properties, nestedStyles } = parseUserStyles(styles, false)\n\n  // Throw when using properties and nested styles together in rule.\n  if (properties.length && nestedStyles.length) {\n    throw new TypeError(`Registering a CSS rule can not use properties with nested styles`)\n  }\n\n  const styleString = stringifyProperties(properties)\n  const rule = new Rule(selector, styleString, container.hash)\n\n  for (const [name, value] of nestedStyles) {\n    registerUserRule(rule, name, value)\n  }\n\n  container.add(rule)\n}\n\n/**\n * Parse and register keyframes on the current instance.\n */\nfunction registerUserHashedRule (container: FreeStyle, prefix: string, styles: UserStyles, displayName?: string) {\n  const bucket = new Cache<Rule | Style>(container.hash)\n  const { pid, id } = collectHashedStyles(bucket, styles, false, displayName)\n\n  const atRule = new Rule(`${prefix} ${id}`, undefined, container.hash, undefined, pid)\n  atRule.merge(bucket)\n  container.add(atRule)\n  return id\n}\n\n/**\n * Get the styles string for a container class.\n */\nfunction getStyles (container: FreeStyle | Rule) {\n  return container.values().map(style => style.getStyles()).join('')\n}\n\n/**\n * Cacheable interface.\n */\nexport interface Container <T> {\n  id: string\n  clone (): T\n  getIdentifier (): string\n  getStyles (): string\n}\n\n/**\n * Change listeners are registered to react to CSS changes.\n */\nexport interface ChangeListenerFunction {\n  (style: Container<any>): any\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache <T extends Container<any>> {\n\n  changeId = 0\n\n  private _children: { [id: string]: T } = {}\n  private _keys: string[] = []\n  private _counts: { [id: string]: number } = {}\n\n  constructor (public hash: HashFunction) {}\n\n  values (): T[] {\n    return this._keys.map(x => this._children[x])\n  }\n\n  add <U extends T> (style: U): U {\n    const count = this._counts[style.id] || 0\n    const item = this._children[style.id] || style.clone()\n\n    this._counts[style.id] = count + 1\n\n    if (count === 0) {\n      this._keys.push(item.id)\n      this._children[item.id] = item\n      this.changeId++\n    } else {\n      // Check if contents are different.\n      if (item.getIdentifier() !== style.getIdentifier()) {\n        throw new TypeError(`Hash collision: ${style.getStyles()} === ${item.getStyles()}`)\n      }\n\n      this._keys.splice(this._keys.indexOf(style.id), 1)\n      this._keys.push(style.id)\n\n      if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId\n\n        item.merge(style)\n\n        if (item.changeId !== prevChangeId) {\n          this.changeId++\n        }\n      }\n    }\n\n    return item as U\n  }\n\n  remove (style: T): void {\n    const count = this._counts[style.id]\n\n    if (count > 0) {\n      this._counts[style.id] = count - 1\n\n      const item = this._children[style.id]\n\n      if (count === 1) {\n        delete this._counts[style.id]\n        delete this._children[style.id]\n        this._keys.splice(this._keys.indexOf(style.id), 1)\n        this.changeId++\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId\n\n        item.unmerge(style)\n\n        if (item.changeId !== prevChangeId) {\n          this.changeId++\n        }\n      }\n    }\n  }\n\n  get (container: Container<any>) {\n    return this._children[container.id]\n  }\n\n  merge <U extends Cache<any>> (cache: U) {\n    for (const value of cache.values()) {\n      this.add(value)\n    }\n\n    return this\n  }\n\n  unmerge <U extends Cache<any>> (cache: U) {\n    for (const value of cache.values()) {\n      this.remove(value)\n    }\n\n    return this\n  }\n\n  clone () {\n    return new Cache(this.hash).merge(this)\n  }\n\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n\n  constructor (\n    public selector: string,\n    public hash: HashFunction,\n    public id = `s${hash(selector)}`,\n    public pid = ''\n  ) {}\n\n  getStyles () {\n    return this.selector\n  }\n\n  getIdentifier () {\n    return `${this.pid}.${this.selector}`\n  }\n\n  clone () {\n    return new Selector(this.selector, this.hash, this.id, this.pid)\n  }\n\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n\n  constructor (public style: string, public hash: HashFunction, public id = `c${hash(style)}`) {\n    super(hash)\n  }\n\n  getStyles (): string {\n    return `${this.values().map(x => x.selector).join(',')}{${this.style}}`\n  }\n\n  getIdentifier () {\n    return this.style\n  }\n\n  clone (): Style {\n    return new Style(this.style, this.hash, this.id).merge(this)\n  }\n\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n\n  constructor (\n    public rule: string,\n    public style = '',\n    public hash: HashFunction,\n    public id = `a${hash(`${rule}.${style}`)}`,\n    public pid = ''\n  ) {\n    super(hash)\n  }\n\n  getStyles (): string {\n    return `${this.rule}{${this.style}${getStyles(this)}}`\n  }\n\n  getIdentifier () {\n    return `${this.pid}.${this.rule}.${this.style}`\n  }\n\n  clone (): Rule {\n    return new Rule(this.rule, this.style, this.hash, this.id, this.pid).merge(this)\n  }\n\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style> implements Container<FreeStyle> {\n\n  constructor (public hash: HashFunction, public debug: boolean, public id = `f${(++instanceId).toString(36)}`) {\n    super(hash)\n  }\n\n  registerStyle (styles: UserStyles, displayName?: string) {\n    return registerUserStyles(this, styles, this.debug ? displayName : undefined)\n  }\n\n  registerKeyframes (keyframes: UserStyles, displayName?: string) {\n    return registerUserHashedRule(this, '@keyframes', keyframes, this.debug ? displayName : undefined)\n  }\n\n  registerRule (rule: string, styles: UserStyles) {\n    return registerUserRule(this, rule, styles)\n  }\n\n  getStyles () {\n    return getStyles(this)\n  }\n\n  getIdentifier () {\n    return this.id\n  }\n\n  clone (): FreeStyle {\n    return new FreeStyle(this.hash, this.debug, this.id).merge(this)\n  }\n\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create (hash = stringHash, debug = process.env.NODE_ENV !== 'production') {\n  return new FreeStyle(hash, debug)\n}\n"]}